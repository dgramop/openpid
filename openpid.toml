[device_info]
name = "TargetPoint3"
description = "PNI Sensor TargetPoint3 Serial Interface"

[packet_formats]
tx = [ 
    { type = "SizeTotal", size_bits = 8, express_as = "Bytes" },
    # maybe collapse the integer and other numeric types to be a bunch of unit variants so that it's less nested and confusing
    { type = "Metadata", segment = { name = "FrameID", bits = 8, type = { type = "Integer", signing = "Unsigned", endianness = "BigEndian"} } },
    #{ type = "Metadata", segment = { name = "FrameID", bits = 16, type = "Raw" } },
    { type = "Payload" },
    { type = "Crc", algorithm = "Crc16XModem" },
]

rx = [ 
    { type = "SizeTotal", size_bits = 8, express_as = "Bytes" },
    { type = "Metadata", segment = { name = "FrameID", bits = 8, type = { type = "Integer", signing = "Unsigned", endianness = "BigEndian"} } },
    #{ type = "Metadata", segment = { name = "FrameID", bits = 16, type = "Raw" } },
    { type = "Payload" },
    { type = "Crc", algorithm = "Crc16XModem" },
]

[structs]

[payloads.tx.GetModInfo]
description = "This frame queries the device's type and firmware revision number. The frame has no payload."
segments = []
FrameID = 0x01

[payloads.rx.GetModInfoResp]
description = "Response to GetModInfo"
FrameID = 0x02
segments = [
#    { name = "type", bits = 32, type = { type = "Integer", endianness = "BigEndian" } },
    { name = "type", bits = 32, type = "StringUTF8" },
    { name = "revision", bits = 32, type = "StringUTF8" }
]

[payloads.tx.SetConfig]
description = "Sets Internal Configurations in the TargetPoint3"
segments = [
    { name = "configid", bits = 8, type = {type = "Integer", signing = "Unsigned", endianness = "BigEndian"}},
    
    # When we add enum_structs, this will be a lot nicer to write out
    { name = "value", type = "Raw" }
]
FrameID = 0x06

[payloads.rx.SetConfigDone]
description = "Response to SetConfig frame"
segments = [ ]
FrameID = 0x13


[transactions.GetModInfo]
description = "Gets device type and firmware revision number"
actions = [
    {type = "Tx", payload = "GetModInfo"},
    {type = "Rx", payload = "GetModInfoResp"},
]
returns = ["GetModInfoResp.type", "GetModInfoResp.revision"]
